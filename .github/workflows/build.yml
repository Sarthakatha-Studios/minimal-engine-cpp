name: Cross-Platform CMake Build

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install build dependencies for CMake
        run: |
          sudo apt update
          sudo apt install -y build-essential libssl-dev wget
        shell: bash

      - name: Build and install CMake 3.22.1 from source
        run: |
          wget https://github.com/Kitware/CMake/releases/download/v3.22.1/cmake-3.22.1.tar.gz
          tar -xzvf cmake-3.22.1.tar.gz
          cd cmake-3.22.1
          ./bootstrap
          make -j$(nproc)
          sudo make install
        shell: bash

      - name: Install project dependencies
        run: |
          chmod +x install_deps.sh
          ./install_deps.sh
        shell: bash

      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
        shell: bash

      - name: Build
        run: cmake --build build --config Release
        shell: bash

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install vcpkg
        run: |
          git clone https://github.com/microsoft/vcpkg.git C:\vcpkg
          C:\vcpkg\bootstrap-vcpkg.bat
        shell: pwsh

      - name: Install dependencies via vcpkg
        run: |
          C:\vcpkg\vcpkg.exe install glfw3:x64-windows zeromq:x64-windows sqlite3:x64-windows gtest:x64-windows
        shell: pwsh

      - name: Configure CMake with vcpkg toolchain
        run: |
          cmake -S . -B build -DCMAKE_TOOLCHAIN_FILE=C:\vcpkg\scripts\buildsystems\vcpkg.cmake -DCMAKE_BUILD_TYPE=Release
        shell: pwsh

      - name: Build
        run: cmake --build build --config Release
        shell: pwsh
